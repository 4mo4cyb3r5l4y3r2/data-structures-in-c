#include <stdio.h>
#include <stdlib.h>

int a[10], n, i, key, pos = 0, flag = 0;

main() {
  void create(), display(), search(), insertion(), deletion();

  int ch;
  while (1) {
    printf("1.create\n2.display\n3.search\n4.insertion\n5.delete\n6.exit\n");
    printf("Enter your choice: ");
    scanf("%d", &ch);
    switch (ch) {
    case 1:
      create();
      break;
    case 2:
      display();
      break;
    case 3:
      search();
      break;
    case 4:
      insertion();
      break;
    case 5:
      deletion();
      break;
    case 6:
      exit(0);
    }
  }
}
void create() {
india:
  printf("Enter the range: ");
  scanf("%d", &n);
  if (n < 1 || n > 20) {
    printf("%d is out of range,n");
    goto india;
  }
  printf("Enter %d no of elements\n", n);
  for (i = 0; i < n; ++i)
    scanf("%d", &a[i]);
  printf("List created successfully");
}
void display() {
  if (n == 0)
    printf("List is empty");
  else {
    printf("List is \n");
    for (i = 0; i < n; i++)
      printf("%d\n", a[i]);
  }
}
void search() {
  flag = 0;
  if (n == 0)
    printf("List is empty");
  else {
    printf("enter the key values to be searched\n");
    scanf("%d", &key);
    for (i = 0; i < n; i++) {
      if (key == a[i]) {
        printf("%d is found at pos %d\n", key, i++);
        flag++;
        pos = i;
      }
    }
  }
  if (flag == 0) {
    printf("%d not found\n", key);
  }
}
void insertion() {
  if (n == 0)
    printf("List is empty");
  else if (n == 20)
    printf("size exceeds");
  else {
    printf("Enter the position\n");
    scanf("%d", &pos);
    if (pos < 1 || pos > n + 1)
      printf("%d is out of range", pos);
    else {
      printf("Enter the element to insert\n");
      scanf("%d", &key);
      for (i = n - 1; i >= pos - 1; i--)
        a[i + 1] = a[i];
      a[pos - 1] = key;
      n++;
      printf("%d is inserted succesfully at pos %d\n", key, pos);
    }
  }
}
void deletion() {
  printf("for deletion\n");
  search();
  if (flag == 0)
    return;
  for (i = pos - 1; i < n - 1; i++) {
    a[i] = a[i + 1];
  }
  n--;
  printf("\n%d deleted succesfully\n", key);
}
